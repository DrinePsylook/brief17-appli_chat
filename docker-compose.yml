services:
  web:
    build: 
      context: ./web
      dockerfile: Dockerfile
    container_name: mychat_web
    command: daphne -b 0.0.0.0 -p 8000 mychat.asgi:application
    volumes:
      - ./web:/app
    depends_on:
      - redis
      - ml_service
    environment:
      - DJANGO_SETTINGS_MODULE=mychat.settings
      - DEBUG=True
    # Réseau pour la communication interne
    networks:
      - mychat_network

  ml_service:
    build:
      context: ./ml_service
      dockerfile: Dockerfile
    container_name: mychat_ml_service
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./ml_service:/app
    depends_on:
      - db_ml
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db_ml:5432/face_recognition_db
    networks:
      - mychat_network

  db_ml:
    image: postgres:13
    container_name: db_ml
    ports:
      - "5433:5432" 
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: face_recognition_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - mychat_network

  nginx:
    image: nginx:alpine
    container_name: mychat_nginx
    ports:
      - "80:80"  # Nginx écoute sur le port 80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./web/static:/var/www/static 
    depends_on:
      - web
    networks:
      - mychat_network

  redis:
    image: redis:7
    container_name: mychat_redis
    ports:
      - "6379:6379"
    networks:
      - mychat_network

  tailwind:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - .:/app
    command: >
      npx tailwindcss -i ./web/static/src/input.css -o ./web/static/src/output.css --watch
    networks:
      - mychat_network

volumes:
  postgres_data:

# Réseau personnalisé
networks:
  mychat_network:
    driver: bridge
